name: First app deploy

env:
  DEV_DOMAIN: dev-first-app-vercel-gh-actions.vercel.app
  PROD_DOMAIN: first-app-vercel-gh-actions.vercel.app

on:
  push:
    paths:
      - "web/**"

jobs:
  deploy_dev:
    runs-on: ubuntu-latest
    environment:
      name: Vercel
      url: https://${{ env.DEV_DOMAIN }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FIRST_APP_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      PREVIEW_DOMAIN:
    defaults:
      run:
        working-directory: "web"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          node-version: '20'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - name: Build Project Artifacts
        run: vercel build --token=$VERCEL_TOKEN
      - name: Deploy Project Artifacts to Vercel
        run: | # grabbing the preview domain from the vercel deploy command
          echo "PREVIEW_DOMAIN=$(vercel deploy --prebuilt --token=$VERCEL_TOKEN)" > $GITHUB_ENV
      - name: "[master] Attach preview domain to dev environment"
        if: ${{ github.ref == 'refs/heads/master' }}
        run: vercel alias set $PREVIEW_DOMAIN $DEV_DOMAIN --token=$VERCEL_TOKEN
      - name: "[feature-branch] Update deploy url"
        if: ${{ github.ref != 'refs/heads/master' }}
        run: | # setting the dev domain to the preview domain for the feature branch
          echo "DEV_DOMAIN=$(echo $PREVIEW_DOMAIN | sed 's~^https://~~')" >> $GITHUB_ENV

  deploy_production:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs: deploy_dev
    environment:
      name: Vercel
      url: https://${{ env.PROD_DOMAIN }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FIRST_APP_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    defaults:
      run:
        working-directory: "web"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          node-version: '20'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - name: Build Project Artifacts
        run: vercel build --prod --token=$VERCEL_TOKEN
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN